[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "City of Engagement is a small city in the Country of Nowhere with a population of 50,000. It serves as one of the key agricultural service centre in the region, specifically fruit farms and vineyards. The local city council is currently preparing the Local Plan 2023, which outlines the upcoming community revitalization plans. To support decision-making by the council, a representative sample survey was conducted with 1,000 residents to collect key household demographic and expenditure data. By analyzing the survey results, the council aims to better optimize the allocation of the city renewal funds to more needy groups and/or areas of concern."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-launching-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-launching-r-packages",
    "title": "Take Home Exercise 1",
    "section": "2.1 Install and launching R packages",
    "text": "2.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if the relevant packages are installed in the computer. If they are, then they will be launched into R. The packages are:\n\nplotly: Used for creating interactive web-based graphs.\nggstatsplot: Used for creating graphics with details from statistical tests.\nknitr: Used for dynamic report generation\npatchwork: Used to combine plots\nggdist: Used for visualising distribution and uncertainty\nggthemes: Provide additional themes for `ggplot2`\ntidyverse: A collection of core packages designed for data science, used extensively for data preparation and wrangling.’\nlubridate\nzoo\nscales\n\n\npacman::p_load(plotly, ggstatsplot, knitr, patchwork, ggdist, ggthemes, tidyverse, lubridate, zoo, scales)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "title": "Take Home Exercise 1",
    "section": "2.2 Importing the Data",
    "text": "2.2 Importing the Data\nThe following code chunk uses the read_csv function to import the necessary csv files and assign them to the relevant variables.\n\nFinancial <- read_csv(\"data/FinancialJournal.csv\")\nDemographic <- read_csv(\"data/Participants.csv\")\n\n\nFinancial\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           <dbl> <dttm>              <chr>      <dbl>\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows\n\n\n\nDemographic\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality <dbl>"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-wrangling",
    "title": "Take Home Exercise 1",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\nAs the initial step to explore the key statistics of the data, we use the do.call function to call the functions cbind (combines the output column-wise) and lapply to loop the summary function over each element in the Financial data. The resulting output is then displayed using knitr::kable(), providing a simple overview of the key statistics of each column in the data.\nInitial Overview of Financial Data Set\n\nkable(do.call(cbind, lapply(Financial, summary)))\n\n\n\n\n\n\n\n\n\n\n\n\nparticipantId\ntimestamp\ncategory\namount\n\n\n\n\nMin.\n0\n1646092800\n1513636\n-1562.725994\n\n\n1st Qu.\n222\n1653398700\ncharacter\n-5.593565787\n\n\nMedian\n464\n1661439600\ncharacter\n-4\n\n\nMean\n480.902452769358\n1661490048.42419\n1513636\n20.0473679499815\n\n\n3rd Qu.\n726\n1669533900\ncharacter\n21.598204925\n\n\nMax.\n1010\n1677628500\ncharacter\n4096.5260598\n\n\n\n\n\nkable(data.frame(sapply(Financial, class)))\n\n\n\n\nparticipantId\ntimestamp\ncategory\namount\n\n\n\n\nnumeric\nPOSIXct\ncharacter\nnumeric\n\n\nnumeric\nPOSIXt\ncharacter\nnumeric\n\n\n\n\nkable(data.frame(sapply(Financial, typeof)))\n\n\n\n\n\nsapply.Financial..typeof.\n\n\n\n\nparticipantId\ndouble\n\n\ntimestamp\ndouble\n\n\ncategory\ncharacter\n\n\namount\ndouble\n\n\n\n\nInitial Overview of Demographic Data Set\n\nkable(do.call(cbind, lapply(Demographic, summary)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nparticipantId\nhouseholdSize\nhaveKids\nage\neducationLevel\ninterestGroup\njoviality\n\n\n\n\nMin.\n0\n1\nlogical\n18\n1011\n1011\n0.000204\n\n\n1st Qu.\n252.5\n1\n710\n29\ncharacter\ncharacter\n0.2400743565\n\n\nMedian\n505\n2\n301\n39\ncharacter\ncharacter\n0.477539156\n\n\nMean\n505\n1.96439169139466\nlogical\n39.0741839762611\n1011\n1011\n0.493793727969337\n\n\n3rd Qu.\n757.5\n3\n710\n50\ncharacter\ncharacter\n0.74681873\n\n\nMax.\n1010\n3\n301\n60\ncharacter\ncharacter\n0.999233967\n\n\n\n\n\nkable(data.frame(sapply(Demographic, class)))\n\n\n\n\n\nsapply.Demographic..class.\n\n\n\n\nparticipantId\nnumeric\n\n\nhouseholdSize\nnumeric\n\n\nhaveKids\nlogical\n\n\nage\nnumeric\n\n\neducationLevel\ncharacter\n\n\ninterestGroup\ncharacter\n\n\njoviality\nnumeric\n\n\n\n\nkable(data.frame(sapply(Demographic, typeof)))\n\n\n\n\n\nsapply.Demographic..typeof.\n\n\n\n\nparticipantId\ndouble\n\n\nhouseholdSize\ndouble\n\n\nhaveKids\nlogical\n\n\nage\ndouble\n\n\neducationLevel\ncharacter\n\n\ninterestGroup\ncharacter\n\n\njoviality\ndouble\n\n\n\n\n\n2.3.1 Inaccurate Data Format\nFrom the initial summaries above, we can tell that some of the data has been incorrectly imported into R. The following code chunk is used to convert them to the correct format as shown in the table outputs below.\nDemo_cleaned <- Demographic %>%\n  mutate(\n    participantId = as.factor(participantId), \n    householdSize = as.integer(householdSize), \n    # haveKids is ok\n    age = as.integer(age), \n    educationLevel = as.factor(educationLevel), \n    educationLevel = factor(educationLevel, levels = c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\"), ordered = TRUE), \n    interestGroup = as.factor(interestGroup)\n    # Joviality is ok\n  )\n\nkable(data.frame(sapply(Demo_cleaned, class)))\n\n\n\n\n\n\n\n\n\n\n\n\n\nparticipantId\nhouseholdSize\nhaveKids\nage\neducationLevel\ninterestGroup\njoviality\n\n\n\n\nfactor\ninteger\nlogical\ninteger\nordered\nfactor\nnumeric\n\n\nfactor\ninteger\nlogical\ninteger\nfactor\nfactor\nnumeric\n\n\n\n\nkable(data.frame(sapply(Demo_cleaned, typeof)))\n\n\n\n\n\nsapply.Demo_cleaned..typeof.\n\n\n\n\nparticipantId\ninteger\n\n\nhouseholdSize\ninteger\n\n\nhaveKids\nlogical\n\n\nage\ninteger\n\n\neducationLevel\ninteger\n\n\ninterestGroup\ninteger\n\n\njoviality\ndouble\n\n\n\n\nFin_cleaned <- Financial %>%\n  mutate(\n    participantId   = as.factor(participantId),\n    timestamp   = as.POSIXct(timestamp),\n    category    = as.factor(category),\n    # amount is ok\n  )\n\nkable(data.frame(sapply(Fin_cleaned, class)))\n\n\n\n\nparticipantId\ntimestamp\ncategory\namount\n\n\n\n\nfactor\nPOSIXct\nfactor\nnumeric\n\n\nfactor\nPOSIXt\nfactor\nnumeric\n\n\n\n\nkable(data.frame(sapply(Fin_cleaned, typeof)))\n\n\n\n\n\nsapply.Fin_cleaned..typeof.\n\n\n\n\nparticipantId\ninteger\n\n\ntimestamp\ndouble\n\n\ncategory\ninteger\n\n\namount\ndouble\n\n\n\n\n\n\n2.3.2 Recode ‘RentAdjustment’ Category In Financial Journal\nRent adjustment is understood as the rebate that is given by the owner to the tenants in view of various reasons. To facilitate the ease of analysis and avoid any areas prone to misunderstanding, we will merge this category with ‘Shelter’ using the recode function.\n\nFin_cleaned$category <- recode(Fin_cleaned$category, 'RentAdjustment' = 'Shelter')\n\n\nFin_cleaned$category[Fin_cleaned$category=='RentAdjustment']\n\nfactor(0)\nLevels: Education Food Recreation Shelter Wage\n\n\n\n\n2.3.3 Remove Duplicate Data in Financial Journal\n1,113 entries were found to be duplicated with matching records in all variables using duplicated. It is likely that these transactions were erroneous. Hence, they were removed using unique.\n\nnrow(Fin_cleaned[duplicated(Fin_cleaned),])\n\n[1] 1113\n\n\n\nFin_cleaned <- unique(Fin_cleaned)\nnrow(Fin_cleaned)\n\n[1] 1512523\n\n\n\n\n2.3.4 Missing Records in Financial Journal\nWhile no missing values were found in both data sets using is.na, some participants were found to have significantly lower number of transactions.\nsum(is.na(Fin_cleaned))\n[1] 0\nsum(is.na(Demo_cleaned))\n[1] 0\n\npax_txn_count <- Fin_cleaned %>% count(participantId, sort = TRUE)\npax_txn_count %>% arrange(n)\n\n# A tibble: 1,011 × 2\n   participantId     n\n   <fct>         <int>\n 1 653              11\n 2 875              11\n 3 346              12\n 4 279              13\n 5 44               14\n 6 794              14\n 7 846              14\n 8 856              14\n 9 867              14\n10 553              15\n# ℹ 1,001 more rows\n\n\nUpon further investigation, it was found that these transactions only occurred in March 2022. To facilitate analysis, a new column for the transactions’ month-year was created. 131 participants were found to be in this category and their corresponding transactions were removed from the analysis.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nFin_cleaned$month_year <- format(as.yearmon(Fin_cleaned$timestamp), \"%Y/%m\")\nFin_cleaned_pivot <- Fin_cleaned %>% \n  group_by(participantId, month_year) %>%\n  summarize(value_sum = sum(amount)) %>%\n  pivot_wider(names_from = month_year, values_from = value_sum)\n\nheatmap_data <- as.matrix(Fin_cleaned_pivot[, -1])\nheatmap(heatmap_data, Colv = NA, Rowv = NA, scale = \"column\", xlab = \"Month-Year\", ylab = \"participantId\", col = gray.colors(10), cexCol = 0.7)\n\n\n\n\n\npax_to_remove <- Fin_cleaned_pivot[which(rowSums(is.na(Fin_cleaned_pivot)) > 0),\"participantId\"]\npax_to_remove = as.list(as.character(pax_to_remove$participantId))\nFin_cleaned <- Fin_cleaned[!(Fin_cleaned$participantId %in% pax_to_remove),]\n\n\n\n2.3.5 Aggregate Statistics for Analysis\nThe Financial Journal data is segregated by individual transaction entries which are not useful for analysis. Furthermore, the demographic information should also be combined with the financial information.\n\nFin_cleaned_agg <- Fin_cleaned %>% \n  group_by(participantId, month_year, category) %>%\n  summarize(value_sum = sum(amount)) %>%\n  pivot_wider(names_from = c(month_year, category), values_from = value_sum)\nFin_cleaned_agg[is.na(Fin_cleaned_agg)] <- 0\nFin_cleaned_agg\n\n# A tibble: 880 × 61\n# Groups:   participantId [880]\n   participantId `2022/03_Education` `2022/03_Food` `2022/03_Recreation`\n   <fct>                       <dbl>          <dbl>                <dbl>\n 1 0                           -38.0          -268.                -349.\n 2 1                           -38.0          -289.               -1048.\n 3 2                           -12.8          -290.                -431.\n 4 3                           -38.0          -292.                -454.\n 5 4                           -12.8          -300.               -1345.\n 6 5                           -12.8          -354.                -526.\n 7 6                           -12.8          -350.               -1014.\n 8 7                           -12.8          -483.               -1003.\n 9 8                           -12.8          -493.                -655.\n10 9                           -91.1          -301.                -423.\n# ℹ 870 more rows\n# ℹ 57 more variables: `2022/03_Shelter` <dbl>, `2022/03_Wage` <dbl>,\n#   `2022/04_Education` <dbl>, `2022/04_Food` <dbl>,\n#   `2022/04_Recreation` <dbl>, `2022/04_Shelter` <dbl>, `2022/04_Wage` <dbl>,\n#   `2022/05_Education` <dbl>, `2022/05_Food` <dbl>,\n#   `2022/05_Recreation` <dbl>, `2022/05_Shelter` <dbl>, `2022/05_Wage` <dbl>,\n#   `2022/06_Education` <dbl>, `2022/06_Food` <dbl>, …\n\n\n\n\n2.3.6 Statistics for Financial Health\nTo facilitate the analysis of financial health, additional definitions and variables were created relating to the transaction categories, as described below.\n\nFinancial Health = Wage + Education + Shelter + Recreation + Food\nExpenses = Education + Shelter + Recreation + Food\n\n\nmonths <- unique(sub(\"_.*\", \"\", names(Fin_cleaned_agg)[-1]))\n\nfor (month in months) {\n  col_name <- paste0(month, \"_FinHealth\")\n  Fin_cleaned_agg[col_name] <- rowSums(Fin_cleaned_agg[, grepl(paste0(\"^\", month), names(Fin_cleaned_agg))])\n}\n\nfor (month in months) {\n  col_name <- paste0(month, \"_Expenses\")\n  Fin_cleaned_agg[col_name] <- Fin_cleaned_agg[[paste0(month, \"_FinHealth\")]] - Fin_cleaned_agg[[paste0(month, \"_Wage\")]]\n}\n\nFin_cleaned_agg[, grepl(\"2023/01\", names(Fin_cleaned_agg))]\n\n# A tibble: 880 × 7\n   `2023/01_Education` `2023/01_Food` `2023/01_Recreation` `2023/01_Shelter`\n                 <dbl>          <dbl>                <dbl>             <dbl>\n 1               -38.0          -265.                -210.             -555.\n 2               -38.0          -266.                -329.             -555.\n 3               -12.8          -313.                -245.             -557.\n 4               -38.0          -290.                -223.             -555.\n 5               -12.8          -275.                -451.            -1002.\n 6               -12.8          -371.                -476.             -600.\n 7               -12.8          -298.                -375.             -581.\n 8               -12.8          -529.                -380.            -1013.\n 9               -12.8          -511.                -510.            -1180.\n10               -91.1          -288.                -343.             -558.\n# ℹ 870 more rows\n# ℹ 3 more variables: `2023/01_Wage` <dbl>, `2023/01_FinHealth` <dbl>,\n#   `2023/01_Expenses` <dbl>\n\n\n\n\n2.3.7 Bin Age and Joviality Data\n\nDemo_cleaned$age_group <- cut(Demo_cleaned$age, breaks = 6)\nDemo_cleaned$joviality_group <- cut(Demo_cleaned$joviality, breaks = 10)\n\n\n\n2.3.8 Final Analysis Data\n\nall_agg_data <- merge(Fin_cleaned_agg, Demo_cleaned, by = \"participantId\", all = FALSE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographic-data-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#demographic-data-visualization",
    "title": "Take Home Exercise 1",
    "section": "3.1 Demographic Data Visualization",
    "text": "3.1 Demographic Data Visualization\nIncome Distribution\n\nall_agg_data$Annual_Income <- rowSums(all_agg_data[, grepl(\"Wage\", names(all_agg_data))])\n\np1 <- ggplot(data=all_agg_data,\n       aes(x=Annual_Income)) +\n  geom_boxplot() + \n  ggtitle(\"Income Distribution\") + \n  theme(\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank()\n  )\n\np2 <- ggplot(data=all_agg_data,\n       aes(x=Annual_Income)) +\n  geom_histogram(bins = 20)\n\np1 / p2 + plot_layout(heights = c(0.1,0.9))\n\n\n\n\n\nggplot(data=all_agg_data,\n       aes(sample=Annual_Income)) +\n  stat_qq() + \n  stat_qq_line()\n\n\n\n\n\np <- ggplot(data=all_agg_data,\n       aes(y=Annual_Income,\n           x=age_group)) +\n  geom_boxplot() + \n  ggtitle(\"Income Distribution by Age Groups\")\n\nggplotly(p)\n\n\n\n\n\n\nFinHealth <- all_agg_data[, grepl(\"FinHealth\", names(all_agg_data))]\nFinHealth_combined <- FinHealth %>%\n  gather(key = \"Month_Year\", value = \"FinHealth\")\n\np <- ggplot(data=FinHealth_combined,\n       aes(y=FinHealth,\n           x=Month_Year)) +\n  geom_boxplot() + \n  coord_flip() +\n  ggtitle(\"Financial Health over time\")\n\nggplotly(p)\n\n\n\n\n\nremelt table with participants/month in rows and category in column\nObjective: different demographic groups vs financials\ndemo: joviality bins (5 bins), age bins (6 bins), education (4 levels), interest group (10 levels)\nfin: income, expenses, finhealth\nexplore:\nbox violin plots age_bin / income or finhealth or expenses (interactive annual)\nraincloud plot age_bin / income or finhealth or expenses (animated over month)\nconfirm:\n???\nuncertainty in median estimates of fin indicators by demo"
  }
]