---
title: "Hands-on Exercise 4a"
author: "Lennis"
date: "5 May 2023"
edit: visual
---

# Getting Started

## Install and launching R packages

The code chunk below uses p_load() of pacman package to check if ggstatsplot and tidyverse packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(ggstatsplot, tidyverse)
```

## Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv", show_col_types = FALSE)
```

# Statistical Tests

## One-sample Test: gghistostats()

```{r}
#| code-fold: TRUE
set.seed(1234)

gghistostats(
  data = exam_data,
  x = ENGLISH,
  type = "bayes",
  test.value = 60,
  xlab = "English scores"
)
```
## Two-sample Mean Test: ggbetweenstats()

```{r}
#| code-fold: TRUE
ggbetweenstats(
  data = exam_data,
  x = GENDER, 
  y = MATHS,
  type = "np",
  messages = FALSE
)
```

## Oneway ANOVA Test: ggbetweenstats()

```{r}
#| code-fold: TRUE
ggbetweenstats(
  data = exam_data,
  x = RACE, 
  y = ENGLISH,
  type = "p",
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE
)
```

## Significant Test of Correlation: ggscatterstats()

```{r}
#| code-fold: TRUE
ggscatterstats(
  data = exam_data,
  x = MATHS,
  y = ENGLISH,
  marginal = FALSE,
  )
```

## Significant Test of Association (Depedence): ggbarstats()

For this section, the Math scores are binned into 4 classes using cut(). 
```{r}
exam1 <- exam_data %>% 
  mutate(MATHS_bins = 
           cut(MATHS, 
               breaks = c(0,60,75,85,100))
)
```

```{r}
#| code-fold: TRUE
ggbarstats(exam1, 
           x = MATHS_bins, 
           y = GENDER)
```

# Visualising Models
realxl() is used to import the data worksheet of ToyotaCorolla.xls workbook into R. 

```{r}
pacman::p_load(readxl, performance, parameters, see)
```

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale
```

## Multiple Regression Model using lm()

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```

## Checking for Collinearity

```{r}
check_collinearity(model)
```

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

## Checking for Normality Assumption

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
```

```{r}
check_n <- check_normality(model1)
```

```{r}
plot(check_n)
```

## Checking for Homogeneity of Variances

```{r}
check_h <- check_heteroscedasticity(model1)
```

```{r}
plot(check_h)
```

## Alternative: Complete Check

```{r}
check_model(model1)
```

## Visualizing Regression Parameters

Method 1
```{r}
plot(parameters(model1))
```

Method 2
```{r}
ggcoefstats(model1, 
            output = "plot")
```